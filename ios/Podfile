require_relative '../node_modules/react-native/scripts/react_native_pods'
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'
require_relative '../node_modules/react-native-permissions/scripts/setup'

# Platform specification
platform :ios, '14'
install! 'cocoapods', :deterministic_uuids => false

target 'annapurna' do
  # Load native modules for React Native
  config = use_native_modules!
  use_frameworks! :linkage => :static
  $RNFirebaseAsStaticFramework = true


  # Flags that can change based on environment values
  flags = get_default_flags()

  # Setup React Native
  use_react_native!(
    :path => config[:reactNativePath],
    :hermes_enabled => true,  # Hermes JavaScript engine enabled
    :fabric_enabled => flags[:fabric_enabled],  # Fabric renderer flag from default settings
    :app_path => "#{Pod::Config.instance.installation_root}/.."  # Path to your app
  )

  # Setup permissions required by the app
  setup_permissions([
    'Camera',               # Camera access
    'MediaLibrary',          # Media library access
    'Notifications',         # Notifications access
    'PhotoLibrary',          # Photo library access
    'PhotoLibraryAddOnly'    # Restricted photo library access
  ])

  # Helper function to resolve Node scripts for pod setup
  def node_require(script)
    require Pod::Executable.execute_command('node', ['-p',
      "require.resolve(
        '#{script}',
        {paths: [process.argv[1]]},
      )", __dir__]).strip
  end

  # Include React Native pods setup script
  node_require('react-native/scripts/react_native_pods.rb')
  
  # Post-install configuration
  post_install do |installer|
    # Apply React Native post-install setup
    react_native_post_install(
      installer,
      :mac_catalyst_enabled => false  # Disable Mac Catalyst support
    )

    # Set minimum iOS deployment target to 12.4
    installer.pods_project.targets.each do |target|
      target.build_configurations.each do |config|
        config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '12.4'
      end
    end

    # Apply workaround for Xcode 12.5 M1 issues
    __apply_Xcode_12_5_M1_post_install_workaround(installer)
  end
end
